name: (E2E Tests) Meshery Adapter for Cilium Tests

on:
  pull_request:
    branches:
      - "*"
    paths-ignore:
      - '.github/**'
  release:
    types: [published]
jobs:
  SetPatternfile:
    runs-on: ubuntu-24.04
    outputs:
      sm_version: ${{ steps.glrt.outputs.release }}
      adapter_version:  ${{ env.version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Get version of adapter
        run: |
            if [ ${{ github.event_name }} == "release" ];then
                echo "version=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
            else 
                echo "version=edge" >> $GITHUB_ENV
            fi
      - name: Get latest release tag
        id: glrt
        run: |
          NEW_CILIUM_VERSION=$(curl --silent "https://api.github.com/repos/cilium/cilium/releases" | jq ' .[] | select(.tag_name | test("rc*") | not) .tag_name' | sed -n 1p$'\n' | tr -d '"')
          echo "::set-output name=release::$NEW_CILIUM_VERSION"
      - name: Change service mesh version in patternfile
        run: | 
           yq e -i '.services.cilium.version="${{ steps.glrt.outputs.release }}"' ./.github/install/deploy.yaml 
           cat ./.github/install/deploy.yaml
      - name: Uploading file
        uses: actions/upload-artifact@v4
        with:
          name: patternfile
          path: ./.github/install/deploy.yaml 

  TestCilium:
    needs: SetPatternfile
    uses: meshery/meshery/.github/workflows/test_adaptersv2.yaml@master
    with:
      expected_resources: cilium
      expected_resources_types: pod
      expected_resources_namespaces: kube-system
      deployment_url: https://raw.githubusercontent.com/meshery/meshery/master/install/deployment_yamls/k8s/meshery-cilium-deployment.yaml
      service_url: https://raw.githubusercontent.com/meshery/meshery/master/install/deployment_yamls/k8s/meshery-cilium-service.yaml
      adapter_name: cilium
      patternfile_name: deploy.yaml
      provider: Local
      k8s_version: v1.29.0
      sm_version: ${{ needs.SetPatternfile.outputs.sm_version }}
      adapter_version:  ${{ needs.SetPatternfile.outputs.adapter_version }}
      output_filename: data.json
    secrets:
      token: ${{ secrets.PROVIDER_TOKEN }} 


  UpdateDocs:
    needs: TestCilium
    if:  "always() && github.event_name != 'pull_request' "
    runs-on: ubuntu-24.04
    steps:
      - name: Skip if needed
        run: |
            echo "this is it ${{ needs.SkipIfNeeded.outputs.skipdocupdate }} "
            if [ "${{github.event_name }}" == "push" ];then
              echo "version=edge" >> $GITHUB_ENV
            fi
            if [ "${{github.event_name }}" == "release" ];then
              echo "version=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
            fi
      - uses: actions/checkout@master
        with:
          repository: meshery/meshery 
          token: ${{ secrets.GH_ACCESS_TOKEN }}   
      - name: DownloadJSON
        uses: actions/download-artifact@v2
        with:
          name: data.json
      - name: echo results
        run: |
          pretty=$(jq . data.json)
          rm data.json
          mkdir -p ./docs/_compatibility/meshery-cilium
          cd ./docs/_compatibility/meshery-cilium
          touch data.json
          echo $pretty > data.json
          cat data.json
          touch test.md
          filename=(`date +%m-%d-%Y-%H-%M-%m_${SHORT_SHA}`)
          echo $filename
          echo "---
          timestamp: $(jq '.metadata.runon| strptime("%a %b %e %X %Z %Y") | strftime("%Y-%m-%d %X %Z %a")' data.json)
          meshery-component: meshery-cilium
          meshery-component-version: $version
          meshery-server-version: $(jq '.metadata."meshery-server-version"' data.json)
          k8s-distro: minikube
          k8s-version: $(jq '.metadata.k8s_version' data.json)
          service-mesh: Cilium
          service-mesh-version: $(jq '.metadata.service_mesh_version' data.json)
          tests:
            pod/cilium: $(jq '.resources_status."pod/cilium"' data.json)
            pod/cilium-operator: $(jq '.resources_status."pod/cilium-operator"' data.json)
            pod/cilium-operator:  $(jq '.resources_status."pod/cilium-operator"' data.json)
          overall-status: $(jq '."overall-status"' data.json)
          ---" >  test.md
          mv test.md $filename.md
          rm data.json
      - name: Commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: docs
          commit_user_name: l5io
          commit_user_email: ci@meshery.io
          commit_author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          commit_options: '--signoff'
          commit_message: '[Docs] Test status of adapter'
